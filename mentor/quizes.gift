$CATEGORY: Modulo 03

::Q301::
Indica la frase incorrecta sobre las bases de datos. {
=La información de una base de datos puede almacenarse en un solo fichero o en varios.
~En las bases de datos la información está almacenada y organizada en ficheros en forma de filas y columnas.
~La seguridad de los datos informatizados en bases de datos es menor que la contenida en archivos de tipo manual.
~Las filas de un archivo de base de datos se denominan campos y las columnas, índices.
}

::Q302:: 
La función gzseek se usa para lo siguiente {
~Conocer el número de byte sobre el que está situado el puntero de un archivo de tipo gzip.
=Buscar una posición en un fichero de tipo gzip y colocar el puntero sobre la misma.
~Escribir una cadena en un fichero de tipo gzip en modo binario.
~Abrir un fichero gzip en el que se va a escribir de forma comprimida.
}

::Q303::
La función error_reporting se usa para lo siguiente {
~Remitir un mensaje de error al dispositivo que se indique.
=Establece el nivel de registro de los errores PHP.
~Detectar y corregir la falta de punto y coma al final de una sentencia.
~Detectar y corregir físicamente los errores en el código PHP.
}

::Q304::  
La expresión echo min(74, 55); devuelve lo siguiente {
=55.
~74.
~-74.
~-55.
}

::Q305:: 
Indica la frase correcta sobre el método rowCount(). {
~Devuelve el número de campos que se han visto afectadas al ejecutarse una sentencia delete table.
=Ejecuta una consulta y devuelve el número de filas (registros) que se han visto afectadas.
~Devuelve solamente la información de una consulta al navegador del cliente.
~Devuelve el número de filas (registros) que se han visto afectadas al ejecutarse una sentencia insert, update o delete.
}

::Q306::  
Indica la frase correcta sobre la función query() de la clase PDO. {
=Ejecuta una consulta y devuelve la información de la misma al navegador del cliente.
~Libera de la memoria el resultado de una consulta.
~Ejecuta una consulta, pero no devuelve por sí sola ninguna información al navegador del cliente.
~Selecciona una tabla de la base de datos.
}

::Q307::  
Para ordenar el resultado de una consulta por un determinado/s campo/s de la misma hay que usar la cláusula {
=order by.
~group by.
~as.
~having.
}

::Q308::  
En la cláusula select el argumento group by debe utilizarse para {
~Ordenar el resultado de una consulta por un determinado campo de la misma.
~Seleccionar los campos de la consulta que se mostrarán en el resultado.
~Eliminar de la consulta los registros duplicados.
=Agrupar el resultado de una consulta por un determinado/s campo/s de la misma.
}

::Q309::  
Para crear una tabla en una base de datos es preciso usar la sentencia siguiente {
=create table.
~use.
~show databases.
~insert into.
}

::Q3010:: 
El método show() de la biblioteca PDFLib se usa para lo siguiente {
~Abrir un nuevo documento de tipo PDF.
~Asignar a un documento PDF diversas informaciones, como autoría, título, asunto, etc.
~Permite escribir un texto en la posición actual del puntero de escritura.
=Muestra el resultado del documento PDF generado.
}

$CATEGORY: Modulo 02

::Q201:: 
Para conocer la longitud de una cadena debemos usar la función{
    ~chop().
    =strlen().
    ~trim().
    ~ucwords().
}

::Q202::
Para leer el contenido de la cookie "clave" debemos el siguiente comando: {
    ~setcookie("clave");
    =$_COOKIE["clave"];
    ~setcookie("clave", 100);
    ~isset($_COOKIE["clave"]);
}

::Q203::
Indica la respuesta correcta sobre cookies {
    ~Las cookies son usadas con poca frecuencia por las webs.
    ~Las cookies son unos ficheros de texto muy grandes que no contienen información sobre el propio cliente.
    ~La información de una cookie está definida en el protocolo FTP.
    =Las cookies se guardan en el ordenador del propio cliente.
}

::Q204:: 
Para copiar un fichero hay que usar la función siguiente {
    ~unlink.
    ~is_file.
    =fcopy.
    ~fputs.
}

::Q205:: 
Para mover el puntero en un fichero tantas posiciones hacia delante como se desee se usa la orden siguiente {
    =fseek.
    ~ftell.
    ~fread.
    ~feof.
}

::Q206::  
Si al abrir un fichero se pone como segundo parámetro el valor "a+", por ejemplo, fopen("fichero.php","a+"), se realiza la operación siguiente {
    ~Se abre el fichero para lectura y escritura, y se sitúa el puntero del fichero al comienzo del mismo.
    =Abre el fichero para lectura y escritura (añadiendo); sitúa el puntero del fichero al final del mismo. Si el fichero no existe, trata de crearlo.
    ~Se abre el fichero para sólo lectura, y se sitúa el puntero del fichero al comienzo del mismo.
    ~Se abre el fichero sólo para sólo escritura, y se sitúa el puntero del fichero al final del mismo.
}

::Q207::  
Suponiendo que $a contenga "ABCDEFG" y $b "HIJ", indica qué valor devuelve la siguiente función de usuario: 
    echo operacion($a,$b); 
    function operacion($x,$y) 
    return strlen($x)-strlen($y); 
{
    =El valor 4.
    ~La cadena "ABC".
    ~La cadena "ABCDEFG".
    ~El valor 3.
}


::Q208:: 
Podemos ordenar los elementos de una matriz teniendo en cuenta su contenido y utilizando una función de comparación definida por el usuario usando la siguiente función {
    ~rsort.
    =uasort.
    ~arsort.
    ~shuffle.
}

::Q209::  
Para comprobar si una fecha es válida, hay que usar la siguiente función de PHP {
    ~setlocale.
    ~urlencode.
    =checkdate.
    ~strftime.
}

::Q2010::  
Para terminar un script cuando nos interese mostrando un mensaje de texto, hay que usar la orden siguiente {
    ~exit.
    ~sleep.
    =die.
    ~usleep.
}

$CATEGORY: Modulo 01

::Q101:: 
Señala la frase incorrecta respecto al lenguaje PHP: {
    ~Es un lenguaje que se basa en la ejecución de scripts.
    ~PHP está pensado especialmente para desarrollo web.
    ~Se puede mezclar código HTML y PHP.
    =Se puede utilizar únicamente en el sistema operativo Windows
}

::Q102:: 
Suponiendo que $x contenga el valor 15, indica el resultado correcto de la siguiente sentencia: 
if ($x < 15) $x -= 2; elseif ($x != 16) $x *= 2; else $x = (10 - 5 * 5); {
    ~13.
    =30.
    ~-15.
    ~25.
}

::Q103::  
Para conocer si el tipo de dato que contiene una variable es número entero largo hay que usar la función {
    ~isset().
    ~is_int().
    =is_long().
    ~gettype().
}
    
::Q104::  
Selecciona la frase incorrecta sobre la lectura de datos desde una página web.{
    =Los datos introducidos en un formulario no pueden pasar a otra página diferente.
    ~Los formularios nos proporcionan la posibilidad de preguntar al usuario cliente una serie de datos.
    ~La variable $_REQUEST contiene los datos introducidos en el formulario cuando pulsamos el botón SUBMIT.
    ~En PHP una página web puede llamarse a sí misma.
}

::Q105::  
Para modificar el tipo definido de una variable debemos usar la siguiente función: {
    ~unset().
    =settype().
    ~isset().
    ~empty().
}
    
::Q106::  
Indica cuál es el valor correcto de la expresión siguiente: ((20+12)/4+1-5*6) {
    ~-23,6.
    ~-5.
    ~8,4.
    =-21
}
    
::Q107::  
Indica la frase correcta. {
    ~La orden print sirve para mostrar información en la página web con un determinado formato.
    ~Las funciones printf() y sprintf() permiten mostrar información sin un formato determinado.
    ~La orden show muestra datos en la página web con un formato determinado.
    =La orden echo muestra información en la página web tal como la escribamos literalmente o según esté contenida en una variable.
}
    
::Q108::  
Indica en qué frase se citan una característica imprescindible a la hora de escribir scripts en PHP.{
    ~El código PHP empieza con los símbolos <asp y termina con asp>
    ~Puede insertarse código PHP donde se quiera y siempre que haga falta.
    =Todas las instrucciones finalizan con punto y coma (";").
    ~Los comentarios de código deben encontrarse entre "(*" y "*)"
}
    
::Q109::  
Indica la frase correcta sobre instrucciones o sentencias en PHP:  {
    ~Las líneas de los scripts deben acabar siempre en coma ','.
    ~El nombre de variable $unidad/B está bien definida.
    =El intérprete de PHP distingue entre letras mayúsculas y minúsculas en el código fuente del script.
    ~En PHP siempre hay que declarar previamente el tipo de variable al definirla.
}
    
::Q1010::  
Suponiendo que $z contenga el valor 12, indica el resultado correcto (valor de $d) de la siguiente sentencia:
switch ($z) 
    case 9: $d = (60 - 5 * $z); 
    case (6 * 2): $d = (5 - 3 / 3); 
    case 7: $d = (($z - 4) * 2); 
    default: $d = 42;{
    ~0.
    ~-1,5.
    ~16.
    =42
}
    